{
	source: {
		usbCamera: {
			caption: 'Local usb camera',
			forceStart: true, // if true, when a camera plugin, it would be autoplay
			// inputOptions: [],
			filter: ['scale=w=1280:h=720:force_original_aspect_ratio=1', 'pad=1280:720:(ow-iw)/2:(oh-ih)/2'],
			src: [ '/dev/video0', '/dev/video1' ]
		},

		webCamera: {
			caption: 'Video from webcamera',
			//inputOptions: ['-timeout 3800'],
			//inputAudioOptions: ['-timeout 3800'],
			filter: ['scale=w=1280:h=720:force_original_aspect_ratio=1', 'pad=1280:720:(ow-iw)/2:(oh-ih)/2'],

			//the retry interval in milliseconds, for camera url
			retryTimeMs: 100, 

			//the amount of time to wait until port is available, for camera url
			timeOutMs: 500, 

			//define the constant ip address cameras
			//src: [],
			src: [ 'http://192.168.2.73:8080/videofeed | /audio.wav' ],

			onvif: {
				enable: false,

				//seconds between 2 discovery action, each discovery will takes 3000ms.
				//so if onvifInterval=1000, means every 4000ms will start new scanning. 
				onvifInterval: 1000, 

				//authentication for onvif devices
				//user: 'testuser',
				//pass: '123456',

				//always switch to play the newest camera.	
				alwaysNewest: true,
			},
		},

		localMp4: {
			debug: true,
			caption: 'Local mp4 playlist',
			// inputOptions: [],
			filter: ['scale=w=1280:h=720:force_original_aspect_ratio=1', 'pad=1280:720:(ow-iw)/2:(oh-ih)/2'],
			loop: 'yes',  // yes, no
			order: 'random', // asc, desc, random
			src: [  
				'/home/and/Downloads/test',
				//'public/media/sub0', 
				//'public/media/sub1', 
				//'public/media/sub2',
				//'/home/and/Downloads/movies'
			]
		},
	},

	advertise: {
		filter: ['scale=w=1280:h=720:force_original_aspect_ratio=1', 'pad=1280:720:(ow-iw)/2:(oh-ih)/2'],
		loop: 'yes',  // yes, no
		order: 'random', // asc, desc, random
		src: [ 'public/media' ]		
	},

	centerNodes: [{
		active: true,
		port: 8080,
		allowSources: ['localMp4'],
		defaultSource: 'localMp4',
		defaultSourceIndex: 0,
		mpeg1Qscale: 12,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		heartBeatInterval: 1000,
	},{
		active: false,
		port: 8081,
		allowSources: ['webCamera'],
		defaultSource: 'webCamera',
		defaultSourceIndex: 0,
		mpeg1Qscale: 12,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		heartBeatInterval: 1000,
	},{
		active: false,
		port: 8082,
		allowSources: ['usbCamera'],
		defaultSource: 'usbCamera',
		defaultSourceIndex: 1,
		mpeg1Qscale: 12,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		heartBeatInterval: 1000,
	},{
		active: false,
		port: 8080,

		// in livestream mode need pulse, and must run in non-root mode
		// setgid: 1000,
		// setuid: 1000,

		// sometimes need not run all sources
		// suggest only the minimized need
		allowSources: ['webCamera', 'usbCamera', 'localMp4'],

		// when centerNode init, only one source will be run
		defaultSource: 'webCamera',

		/*
		when the defaultSource is:
		1) usbCamera,webCamera: will select source[defaultSource].src[defaultSourceIndex] as auto start target.
		2) localMp4: will only pick the mp4 file of source[defaultSource].src[defaultSourceIndex], 
			and other directories will be ignored. 
			If defaultSourceIndex set to -1, means all directories are  available 
		*/
		defaultSourceIndex: 0,

		mpeg1Qscale: 12,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		heartBeatInterval: 1000,

		// serve live stream
		streamMjpeg: 'seed.mjpeg',
		streamWav: 'seed.wav',

		//livestream: 'tencentCloudLive',
	    },{
		active: false,
		port: 8081,
		defaultSource: 'usbCamera',
		defaultSourceIndex: 0,
		mpeg1Qscale: 12,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		heartBeatInterval: 1000,
		//livestream: 'tencentCloudLive',
	}],

	livestreams: [{
		name: 'tencentCloudLive',

		// when thie remote rtmp server shutdown the channel, 
		// this will retry in 3000 seconds as default
		retryMs: 3000,

		// only one input item should be set to "true"
		// the inputs below are audio inputs, will merged with main video
		inputs: [{
				active: true,
				name: 'video',
				src: 'http://127.0.0.1:8081/stream/seed.mjpeg',
				options: [ 
					'-thread_queue_size 64',
				        '-itsoffset -0',
					],
		    },{
				active: true,
				name: 'audio',
				src: 'http://127.0.0.1:8081/stream/seed.wav',
				options: [ '-thread_queue_size 64' ],
		    }
		],

		output : {
			name: 'tencent video stream cloud',
			options: [
				'-f flv',
				'-s film',
				'-r 15',
				'-pix_fmt yuv420p',
				'-b:v 256k',
				'-c:v libx264',
				'-b:a 64k',
				'-c:a aac',
			],
			outputTo: 'rtmp://19924.livepush.myqcloud.com/live/19924_test001?bizid=19924&txSecret=3bef4336479fae4b856351471be64028&txTime=5AE73D7F'
		},
	}],

	adminKeys: {
		sourceAdmin: [ 
			'e39a8be397992eb748be3975',
		],
		nodesAdmin: [
			'e39a8be397992eb748be3975',
		]
	},

	relaysNodes: [{
		active: true,
		port: 8090,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		mjpegUpdateInterval: 100,
		upstreams :[{
			active: true,
			default: true,
			name: 'streamOne',
			caption: 'The sample stream A',
			url: 'ws://localhost:8080',
		},{
			active: true,
			name: 'streamTwo',
			caption: 'The sample stream B',
			url: 'ws://localhost:8081',
		},{
			active: true,
			name: 'streamThree',
			caption: 'The sample stream C',
			url: 'ws://localhost:8082',
		}],
	    },{
		active: false,
		port: 8091,
		mpeg1MaxUser: 20,
		mjpegMaxUser: 200,
		mjpegUpdateInterval: 100,
		upstreams :[{
			active: true,
			default: true,
			name: 'streamOne',
			caption: 'The sample stream A',
			url: 'ws://localhost:8080',
		},{
			active: false,
			name: 'streamTwo',
			caption: 'The sample stream B',
			url: 'ws://localhost:8081',
		}],
	}],

	playerNodes: [{
		active: true,
		screen: '0',
		vo: 'vdpau',
		type: 'v4l2',
		dev: '/dev/video0',
		debug: true,
		verbose: true
	}, {
		active: false,
		screen: '0',
		vo: 'vdpau',
		type: 'mjpeg',
		url: 'http://localhost:8080/stream/seed.mjpeg',
		debug: true,
		verbose: true
	}, {
		active: false,
		screen: '1',
		vo: 'vdpau',
		type: 'mjpeg',
		url: 'http://localhost:8080/stream/seed.mjpeg',
		debug: true,
		verbose: true
	}],

	sourceNodes: [{
		active: true,
		port: 8070,
		size: '1280x720',
		defaultSource: 'localMp4-0001',
		sources: [{
			active: true,
			caption: 'Local mp4 playlist',
			name: 'localMp4-0001',
			pluginName: 'localMp4',
			loop: true,  
			order: 'random', // asc, desc, random
			recursive: false,
			src: [ 'public/media' ]		
		  },{
			active: true,
			caption: 'Local mp4 playlist',
			name: 'localMp4-0002',
			pluginName: 'localMp4',
			loop: true,  
			order: 'random', // asc, desc, random
			recursive: false,
			src: [ 'public/media/sub' ]		
		  },{
			active: false,
			caption: 'Local usb camera',
			name: 'usbCamera-0001',
			pluginName: 'usbCamera',
			src: [ '/dev/video0' ]
		  },{
			active: false,
			caption: 'Video from webcamera',
			name: 'webCamera-0001',
			pluginName: 'webCamera',
			src: [ 'http://127.0.0.1:8083/?action=stream' ]
		}]
	}],
}
